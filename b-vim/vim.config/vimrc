" 修改leader键
let mapleader = "\<space>"
let g:mapleader ="\<space>"
		" ii 替换 Esc
inoremap ii <Esc>
		" 将 ; 绑定到 : 用于快速进入命令行
nnoremap ; :
" 保证工作目录为当前目录
autocmd BufEnter * lcd %:p:h

" ##### 插件配置
if $GREEN_VIM_CONFIG
	if filereadable(expand("$GREEN_VIM_CONFIG_PATH/vimrc.bundles"))
	source $GREEN_VIM_CONFIG_PATH/vimrc.bundles
	endif
else
	if filereadable(expand("~/.vimrc.bundles"))
	source ~/.vimrc.bundles
	endif
endif

" ##### 基本配置
if $GREEN_VIM_CONFIG
	if filereadable(expand("$GREEN_VIM_CONFIG_PATH/vimrc.config_base"))
	source $GREEN_VIM_CONFIG_PATH/vimrc.config_base
	endif
else
	if filereadable(expand("~/.vimrc.config_base"))
	source ~/.vimrc.config_base
	endif
endif

" #####  文件类型设置
if $GREEN_VIM_CONFIG
	if filereadable(expand("$GREEN_VIM_CONFIG_PATH/vimrc.config_filetype"))
		source $GREEN_VIM_CONFIG_PATH/vimrc.config_filetype
	endif
else
	if filereadable(expand("~/.vimrc.config_filetype"))
		source ~/.vimrc.config_filetype
	endif
endif

" ##### 本地自定义配置
if $GREEN_VIM_CONFIG
	if filereadable(expand("$GREEN_VIM_CONFIG_PATH/vimrc.local"))
	source $GREEN_VIM_CONFIG_PATH/vimrc.local
	endif
else
	if filereadable(expand("~/.vimrc.local"))
		source ~/.vimrc.local
	endif
endif

" ##### 如果当前项目文件内有关于 vim  的特殊配置，
" 则加载此配置，实现自定义化.
if filereadable(expand(".workspace.vim"))
	source .workspace.vim
endif

" ##### 各种 vim 文件设置
" 备份
set backup
if $GREEN_VIM_CONFIG
	set backupdir=$GREEN_VIM_CONFIG_PATH/vim.tmp/vimbackup
else
	set backupdir=~/.vim/vimbackup
endif
" 备份防相同文件名：
autocmd BufWritePre *
    \ let s:cmd = 'echo '. '"' . expand("%:p") . '"|base64' |
    \ let s:cmd = substitute(system(s:cmd),"\n","","") |
    \ let &bex = '_' . strftime("%Y%m%d") . '_' . s:cmd |
    \ exe ":mkview"
" 查找备份的解码, 放在 bash_alias.sh 中
" alias lsvimbak="ls*|rev|cut -d_  -f1 |rev|base64 -D"


" 交换文件
set swapfile
if $GREEN_VIM_CONFIG
	set dir=$GREEN_VIM_CONFIG_PATH/vim.tmp/vimswap
else
	set dir=~/.vim/vimswap
endif

" undo
if has('persistent_undo')
	set undolevels=1000         " How many undos
	set undoreload=10000        " number of lines to save for undo
	set undofile                " So is persistent undo ...
	if $GREEN_VIM_CONFIG
		set undodir=$GREEN_VIM_CONFIG_PATH/vim.tmp/vimundo
	else
		set undodir=~/.vim/vimundo/
	endif
endif


if $MY_BASH
	if filereadable(expand("~/.my.bash.vim"))
		source ~/.my.bash.vim
	endif
endif
